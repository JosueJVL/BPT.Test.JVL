≠
w/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/DTOs/AssignmentDto.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
DTOs( ,
{ 
public 

class 
AssignmentDto 
{ 
public 
int 
IdAssignment 
{  !
get" %
;% &
set' *
;* +
}, -
[		 	
Required			 
]		 
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
} 
} ó

~/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/DTOs/AssignmentStudentDto.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
DTOs( ,
{ 
public 

class  
AssignmentStudentDto %
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
public 
int 
IdAssigment 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
int		 
	IdStudent		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
StudentsDto

 
StudentsDto

 &
{

' (
get

) ,
;

, -
set

. 1
;

1 2
}

3 4
public 
List 
< 
AssignmentDto !
>! "
AssignmentDto# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ˘
u/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/DTOs/StudentsDTO.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
DTOs( ,
{ 
public 

class 
StudentsDto 
{ 
public 
int 
	IdStudent 
{ 
get "
;" #
set$ '
;' (
}) *
[

 	
Required

	 
]

 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
DateTime 
	BirthDate !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} Ù
s/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/DTOs/UserModel.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
DTOs( ,
{ 
public 

class 
	UserModel 
{ 
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} †
x/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/Helpers/AutoMapping.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
Helpers( /
{ 
public 

class 
AutoMapping 
: 
Profile &
{ 
public		 
AutoMapping		 
(		 
)		 
{

 	
this 
. 

DataMapper 
( 
) 
; 
} 	
private 
void 

DataMapper 
(  
)  !
{ 	
	CreateMap 
< 
Students 
, 
StudentsDto  +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 
StudentsDto !
,! "
Students# +
>+ ,
(, -
)- .
;. /
	CreateMap 
< 

Assignment  
,  !
AssignmentDto" /
>/ 0
(0 1
)1 2
;2 3
	CreateMap 
< 
AssignmentDto #
,# $

Assignment% /
>/ 0
(0 1
)1 2
;2 3
	CreateMap 
< 
AssignmentStudent '
,' ( 
AssignmentStudentDto) =
>= >
(> ?
)? @
;@ A
	CreateMap 
<  
AssignmentStudentDto *
,* +
AssignmentStudent, =
>= >
(> ?
)? @
;@ A
} 	
} 
} ä
Å/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/IServices/IAssignmentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
	IServices( 1
{ 
public 

	interface 
IAssignmentService '
{ 
Task		 
<		 
List		 
<		 
AssignmentDto		 
>		  
>		  !
GetAll		" (
(		( )
)		) *
;		* +
Task

 
<

 
AssignmentDto

 
>

 
GetById

 #
(

# $
int

$ '
id

( *
)

* +
;

+ ,
Task 
< 
AssignmentDto 
> 
Create "
(" #
AssignmentDto# 0
student1 8
)8 9
;9 :
Task 
< 
bool 
> 
Update 
( 
int 
id  
,  !
AssignmentDto" /
student0 7
)7 8
;8 9
Task 
< 
bool 
> 
Remove 
( 
int 
Id  
)  !
;! "
} 
} Å

à/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/IServices/IAssignmentStudentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
	IServices( 1
{ 
public 

	interface %
IAssignmentStudentService .
{ 
Task		 
<		 
List		 
<		  
AssignmentStudentDto		 &
>		& '
>		' (
GetAll		) /
(		/ 0
)		0 1
;		1 2
Task

 
<

 
List

 
<

  
AssignmentStudentDto

 &
>

& '
>

' (
GetById

) 0
(

0 1
int

1 4
id

5 7
)

7 8
;

8 9
Task 
<  
AssignmentStudentDto !
>! "
Create# )
() * 
AssignmentStudentDto* >
student? F
)F G
;G H
Task 
< 
bool 
> 
Remove 
( 
int 
Id  
)  !
;! "
} 
} ë
á/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/IServices/IDetailAssignmentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
	IServices( 1
{ 
public 

	interface $
IDetailAssignmentService -
{ 
Task		 
<		 
List		 
<		  
AssignmentStudentDto		 &
>		& '
>		' (
GetAll		) /
(		/ 0
)		0 1
;		1 2
Task

 
<

 
List

 
<

  
AssignmentStudentDto

 &
>

& '
>

' (
GetById

) 0
(

0 1
int

1 4
id

5 7
)

7 8
;

8 9
} 
} ã
Ñ/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/IServices/IDetailStudentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
	IServices( 1
{ 
public 

	interface !
IDetailStudentService *
{ 
Task		 
<		 
List		 
<		  
AssignmentStudentDto		 &
>		& '
>		' (
GetAll		) /
(		/ 0
)		0 1
;		1 2
Task

 
<

 
List

 
<

  
AssignmentStudentDto

 &
>

& '
>

' (
GetById

) 0
(

0 1
int

1 4
id

5 7
)

7 8
;

8 9
} 
} •
à/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/IServices/IJwTAuthenticationService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
	IServices( 1
{ 
public 

	interface %
IJwTAuthenticationService .
{ 
string 
Authenticate 
( 
string "
name# '
,' (
string) /
password0 8
)8 9
;9 :
} 
} Ö
~/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/IServices/IStudentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
	IServices( 1
{ 
public 

	interface 
IStudentService $
{ 
Task		 
<		 
List		 
<		 
StudentsDto		 
>		 
>		 
GetStudents		  +
(		+ ,
)		, -
;		- .
Task

 
<

 
StudentsDto

 
>

 
GetStudentById

 (
(

( )
int

) ,
id

- /
)

/ 0
;

0 1
Task 
< 
StudentsDto 
> 
Create  
(  !
StudentsDto! ,
student- 4
)4 5
;5 6
Task 
< 
bool 
> 
Update 
( 
int 
id  
,  !
StudentsDto" -
student. 5
)5 6
;6 7
Task 
< 
bool 
> 
Remove 
( 
int 
Id  
)  !
;! "
} 
} ËD
/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/Services/AssignmentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
Services( 0
{ 
public 

class 
AssignmentService "
:# $
IAssignmentService% 7
{ 
private 
readonly 
BPTDbContext %
context& -
;- .
private 
readonly 
IMapper  
mapper! '
;' (
public 
AssignmentService  
(  !
BPTDbContext! -
context. 5
,5 6
IMapper7 >
mapper? E
)E F
{ 	
this 
. 
context 
= 
context "
;" #
this 
. 
mapper 
= 
mapper  
;  !
} 	
public 
async 
Task 
< 
AssignmentDto '
>' (
Create) /
(/ 0
AssignmentDto0 =
model> C
)C D
{ 	
try 
{ 
var 
result 
= 
await "
context# *
.* +
Assignments+ 6
.6 7
Where7 <
(< =
c= >
=>? A
cB C
.C D
IdAssignmentD P
==Q S
modelT Y
.Y Z
IdAssignmentZ f
)f g
.g h
ToListAsynch s
(s t
)t u
;u v
if 
( 
! 
result 
. 
Any 
(  
)  !
)! "
{ 
await   
context   !
.  ! "
AddAsync  " *
(  * +
new  + .

Assignment  / 9
{  : ;
Name  < @
=  A B
model  C H
.  H I
Name  I M
}  N O
)  O P
;  P Q
await!! 
context!! !
.!!! "
SaveChangesAsync!!" 2
(!!2 3
)!!3 4
;!!4 5
return"" 
model""  
;""  !
}## 
return%% 
mapper%% 
.%% 
Map%% !
<%%! "
AssignmentDto%%" /
>%%/ 0
(%%0 1
result%%1 7
.%%7 8
First%%8 =
(%%= >
)%%> ?
)%%? @
;%%@ A
}&& 
catch'' 
('' 
	Exception'' 
e'' 
)'' 
{(( 
throw** 
;** 
}++ 
},, 	
public.. 
async.. 
Task.. 
<.. 
AssignmentDto.. '
>..' (
GetById..) 0
(..0 1
int..1 4
id..5 7
)..7 8
{// 	
var00 
result00 
=00 
await00 
context00 &
.00& '
Assignments00' 2
.002 3
Where003 8
(008 9
c009 :
=>00; =
c00> ?
.00? @
IdAssignment00@ L
==00M O
id00P R
)00R S
.00S T
ToListAsync00T _
(00_ `
)00` a
;00a b
if11 
(11 
result11 
.11 
Any11 
(11 
)11 
)11 
{22 
return33 
mapper33 
.33 
Map33 !
<33! "
AssignmentDto33" /
>33/ 0
(330 1
result331 7
.337 8
First338 =
(33= >
)33> ?
)33? @
;33@ A
}44 
return66 
new66 
AssignmentDto66 $
(66$ %
)66% &
;66& '
}77 	
public99 
async99 
Task99 
<99 
List99 
<99 
AssignmentDto99 ,
>99, -
>99- .
GetAll99/ 5
(995 6
)996 7
{:: 	
var;; 
result;; 
=;; 
await;; 
context;; &
.;;& '
Assignments;;' 2
.;;2 3
ToListAsync;;3 >
(;;> ?
);;? @
;;;@ A
if<< 
(<< 
result<< 
.<< 
Any<< 
(<< 
)<< 
)<< 
{== 
return>> 
mapper>> 
.>> 
Map>> !
<>>! "
List>>" &
<>>& '
AssignmentDto>>' 4
>>>4 5
>>>5 6
(>>6 7
result>>7 =
)>>= >
;>>> ?
}?? 
returnAA 
newAA 
ListAA 
<AA 
AssignmentDtoAA )
>AA) *
(AA* +
)AA+ ,
;AA, -
}BB 	
publicDD 
asyncDD 
TaskDD 
<DD 
boolDD 
>DD 
RemoveDD  &
(DD& '
intDD' *
idDD+ -
)DD- .
{EE 	
boolFF 
flagFF 
=FF 
falseFF 
;FF 
varGG 
resultGG 
=GG 
awaitGG 
contextGG &
.GG& '
AssignmentsGG' 2
.GG2 3
WhereGG3 8
(GG8 9
cGG9 :
=>GG; =
cGG> ?
.GG? @
IdAssignmentGG@ L
==GGM O
idGGP R
)GGR S
.GGS T
ToListAsyncGGT _
(GG_ `
)GG` a
;GGa b
varHH 
resultAsignmentHH 
=HH  !
awaitHH" '
contextHH( /
.HH/ 0
AssignmentStudentsHH0 B
.HHB C
WhereHHC H
(HHH I
cHHI J
=>HHK M
cHHN O
.HHO P
IdAssigmentHHP [
==HH\ ^
idHH_ a
)HHa b
.HHb c
ToListAsyncHHc n
(HHn o
)HHo p
;HHp q
ifII 
(II 
resultAsignmentII 
.II  
AnyII  #
(II# $
)II$ %
)II% &
{JJ 
resultAsignmentKK 
.KK  
ForEachKK  '
(KK' (
asyncKK( -
cKK. /
=>KK0 2
{KK3 4
contextLL 
.LL 
RemoveLL "
(LL" #
cLL# $
)LL$ %
;LL% &
awaitMM 
contextMM !
.MM! "
SaveChangesAsyncMM" 2
(MM2 3
)MM3 4
;MM4 5
}NN 
)NN 
;NN 
}OO 
ifQQ 
(QQ 
resultQQ 
.QQ 
AnyQQ 
(QQ 
)QQ 
)QQ 
{RR 
contextSS 
.SS 
RemoveSS 
(SS 
resultSS %
.SS% &
FirstSS& +
(SS+ ,
)SS, -
)SS- .
;SS. /
awaitTT 
contextTT 
.TT 
SaveChangesAsyncTT .
(TT. /
)TT/ 0
;TT0 1
returnUU 
flagUU 
=UU 
trueUU "
;UU" #
}VV 
returnXX 
flagXX 
;XX 
}YY 	
public[[ 
async[[ 
Task[[ 
<[[ 
bool[[ 
>[[ 
Update[[  &
([[& '
int[[' *
id[[+ -
,[[- .
AssignmentDto[[/ <
model[[= B
)[[B C
{\\ 	
bool]] 
flag]] 
=]] 
false]] 
;]] 
var^^ 
result^^ 
=^^ 
await^^ 
context^^ &
.^^& '
Assignments^^' 2
.^^2 3
Where^^3 8
(^^8 9
c^^9 :
=>^^; =
c^^> ?
.^^? @
IdAssignment^^@ L
==^^M O
id^^P R
)^^R S
.^^S T
ToListAsync^^T _
(^^_ `
)^^` a
;^^a b
if__ 
(__ 
result__ 
.__ 
Any__ 
(__ 
)__ 
)__ 
{`` 
resultaa 
.aa 
Firstaa 
(aa 
)aa 
.aa 
Nameaa #
=aa$ %
modelaa& +
.aa+ ,
Nameaa, 0
;aa0 1
awaitbb 
contextbb 
.bb 
SaveChangesAsyncbb .
(bb. /
)bb/ 0
;bb0 1
returncc 
flagcc 
=cc 
truecc "
;cc" #
}dd 
returnff 
flagff 
;ff 
}gg 	
}hh 
}ii ≥7
Ü/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/Services/AssignmentStudentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
Services( 0
{ 
public 

class $
AssignmentStudentService )
:* +%
IAssignmentStudentService, E
{ 
private 
readonly 
BPTDbContext %
context& -
;- .
private 
readonly 
IMapper  
mapper! '
;' (
public $
AssignmentStudentService '
(' (
BPTDbContext( 4
context5 <
,< =
IMapper> E
mapperF L
)L M
{ 	
this 
. 
context 
= 
context "
;" #
this 
. 
mapper 
= 
mapper  
;  !
} 	
public 
async 
Task 
<  
AssignmentStudentDto .
>. /
Create0 6
(6 7 
AssignmentStudentDto7 K
studentL S
)S T
{ 	
var 
result 
= 
await 
context &
.& '
AssignmentStudents' 9
.9 :
Where: ?
(? @
c@ A
=>B D
cE F
.F G
IdG I
==J L
studentM T
.T U
IdU W
)W X
.X Y
ToListAsyncY d
(d e
)e f
;f g
if 
( 
! 
result 
. 
Any 
( 
) 
) 
{ 
var 
estudiantesDAO "
=# $
mapper% +
.+ ,
Map, /
</ 0
AssignmentStudent0 A
>A B
(B C
studentC J
)J K
;K L
await 
context 
. 
AddAsync &
(& '
estudiantesDAO' 5
)5 6
;6 7
await   
context   
.   
SaveChangesAsync   .
(  . /
)  / 0
;  0 1
return!! 
student!! 
;!! 
}"" 
return$$ 
mapper$$ 
.$$ 
Map$$ 
<$$  
AssignmentStudentDto$$ 2
>$$2 3
($$3 4
result$$4 :
.$$: ;
First$$; @
($$@ A
)$$A B
)$$B C
;$$C D
}%% 	
public(( 
async(( 
Task(( 
<(( 
List(( 
<((  
AssignmentStudentDto(( 3
>((3 4
>((4 5
GetAll((6 <
(((< =
)((= >
{)) 	
var** 
result** 
=** 
await** 
context** &
.**& '
AssignmentStudents**' 9
.++  !
Include++! (
(++( )
c++) *
=>+++ -
c++. /
.++/ 0
StudentsDto++0 ;
)++; <
.,,  !
Include,,! (
(,,( )
c,,) *
=>,,+ -
c,,. /
.,,/ 0
AssignmentDto,,0 =
),,= >
.--  !
ToListAsync--! ,
(--, -
)--- .
;--. /
if.. 
(.. 
result.. 
... 
Any.. 
(.. 
).. 
).. 
{// 
return00 
mapper00 
.00 
Map00 !
<00! "
List00" &
<00& ' 
AssignmentStudentDto00' ;
>00; <
>00< =
(00= >
result00> D
)00D E
;00E F
}11 
return33 
new33 
List33 
<33  
AssignmentStudentDto33 0
>330 1
(331 2
)332 3
;333 4
}44 	
public66 
async66 
Task66 
<66 
List66 
<66  
AssignmentStudentDto66 3
>663 4
>664 5
GetById666 =
(66= >
int66> A
id66B D
)66D E
{77 	
var88 
result88 
=88 
await88 
context88 &
.88& '
AssignmentStudents88' 9
.99 
Include99 $
(99$ %
c99% &
=>99' )
c99* +
.99+ ,
StudentsDto99, 7
)997 8
.:: 
Include:: $
(::$ %
c::% &
=>::' )
c::* +
.::+ ,
AssignmentDto::, 9
)::9 :
.;; 
Where;; "
(;;" #
c;;# $
=>;;% '
c;;( )
.;;) *
Id;;* ,
==;;- /
id;;0 2
);;2 3
.<< 
ToListAsync<< (
(<<( )
)<<) *
;<<* +
if>> 
(>> 
result>> 
.>> 
Any>> 
(>> 
)>> 
)>> 
{?? 
return@@ 
mapper@@ 
.@@ 
Map@@ !
<@@! "
List@@" &
<@@& ' 
AssignmentStudentDto@@' ;
>@@; <
>@@< =
(@@= >
result@@> D
)@@D E
;@@E F
}AA 
returnCC 
newCC 
ListCC 
<CC  
AssignmentStudentDtoCC 0
>CC0 1
(CC1 2
)CC2 3
;CC3 4
}DD 	
publicFF 
asyncFF 
TaskFF 
<FF 
boolFF 
>FF 
RemoveFF  &
(FF& '
intFF' *
IdFF+ -
)FF- .
{GG 	
boolHH 
flagHH 
=HH 
falseHH 
;HH 
varII 
resultII 
=II 
awaitII 
contextII &
.II& '
AssignmentStudentsII' 9
.II9 :
WhereII: ?
(II? @
cII@ A
=>IIB D
cIIE F
.IIF G
IdIIG I
==IIJ L
IdIIM O
)IIO P
.IIP Q
ToListAsyncIIQ \
(II\ ]
)II] ^
;II^ _
ifJJ 
(JJ 
resultJJ 
.JJ 
AnyJJ 
(JJ 
)JJ 
)JJ 
{KK 
contextLL 
.LL 
RemoveLL 
(LL 
resultLL %
.LL% &
FirstLL& +
(LL+ ,
)LL, -
)LL- .
;LL. /
awaitMM 
contextMM 
.MM 
SaveChangesAsyncMM .
(MM. /
)MM/ 0
;MM0 1
returnNN 
flagNN 
=NN 
trueNN "
;NN" #
}OO 
returnQQ 
flagQQ 
;QQ 
}RR 	
}SS 
}TT Ú
Ö/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/Services/DetailAssignmentService.cs
	namespace

 	
BPT


 
.

 
Test

 
.

 
JVL

 
.

 
BackEnd

 
.

 
Services

 '
.

' (
Services

( 0
{ 
public 

class #
DetailAssignmentService (
:) *$
IDetailAssignmentService+ C
{ 
private 
readonly 
BPTDbContext %
context& -
;- .
private 
readonly 
IMapper  
mapper! '
;' (
public #
DetailAssignmentService &
(& '
BPTDbContext' 3
context4 ;
,; <
IMapper= D
mapperE K
)K L
{ 	
this 
. 
context 
= 
context "
;" #
this 
. 
mapper 
= 
mapper  
;  !
} 	
public 
async 
Task 
< 
List 
<  
AssignmentStudentDto 3
>3 4
>4 5
GetAll6 <
(< =
)= >
{ 	
var 
result 
= 
await 
context &
.& '
AssignmentStudents' 9
.$ %
Include% ,
(, -
c- .
=>/ 1
c2 3
.3 4
StudentsDto4 ?
)? @
.$ %
Include% ,
(, -
c- .
=>/ 1
c2 3
.3 4
AssignmentDto4 A
)A B
.$ %
ToListAsync% 0
(0 1
)1 2
;2 3
if 
( 
result 
. 
Any 
( 
) 
) 
{ 
return 
mapper 
. 
Map !
<! "
List" &
<& ' 
AssignmentStudentDto' ;
>; <
>< =
(= >
result> D
)D E
;E F
}   
return"" 
new"" 
List"" 
<""  
AssignmentStudentDto"" 0
>""0 1
(""1 2
)""2 3
;""3 4
}## 	
public%% 
async%% 
Task%% 
<%% 
List%% 
<%%  
AssignmentStudentDto%% 3
>%%3 4
>%%4 5
GetById%%6 =
(%%= >
int%%> A
id%%B D
)%%D E
{&& 	
var'' 
result'' 
='' 
await'' 
context'' &
.''& '
AssignmentStudents''' 9
.(( 
Include(( $
((($ %
c((% &
=>((' )
c((* +
.((+ ,
StudentsDto((, 7
)((7 8
.)) 
Include)) $
())$ %
c))% &
=>))' )
c))* +
.))+ ,
AssignmentDto)), 9
)))9 :
.** 
Where** "
(**" #
c**# $
=>**% '
c**( )
.**) *
IdAssigment*** 5
==**6 8
id**9 ;
)**; <
.++ 
ToListAsync++ (
(++( )
)++) *
;++* +
if-- 
(-- 
result-- 
.-- 
Any-- 
(-- 
)-- 
)-- 
{.. 
return// 
mapper// 
.// 
Map// !
<//! "
List//" &
<//& ' 
AssignmentStudentDto//' ;
>//; <
>//< =
(//= >
result//> D
)//D E
;//E F
}00 
return22 
new22 
List22 
<22  
AssignmentStudentDto22 0
>220 1
(221 2
)222 3
;223 4
}33 	
}44 
}55 ‰
Ç/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/Services/DetailStudentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
Services( 0
{ 
public 

class  
DetailStudentService %
:& '!
IDetailStudentService( =
{ 
private 
readonly 
BPTDbContext %
context& -
;- .
private 
readonly 
IMapper  
mapper! '
;' (
public  
DetailStudentService #
(# $
BPTDbContext$ 0
context1 8
,8 9
IMapper: A
mapperB H
)H I
{ 	
this 
. 
context 
= 
context "
;" #
this 
. 
mapper 
= 
mapper  
;  !
} 	
public 
async 
Task 
< 
List 
<  
AssignmentStudentDto 3
>3 4
>4 5
GetAll6 <
(< =
)= >
{ 	
var 
result 
= 
await 
context &
.& '
AssignmentStudents' 9
.( )
Include) 0
(0 1
c1 2
=>3 5
c6 7
.7 8
StudentsDto8 C
)C D
.( )
Include) 0
(0 1
c1 2
=>3 5
c6 7
.7 8
AssignmentDto8 E
)E F
.( )
ToListAsync) 4
(4 5
)5 6
;6 7
if 
( 
result 
. 
Any 
( 
) 
) 
{ 
return   
mapper   
.   
Map   !
<  ! "
List  " &
<  & ' 
AssignmentStudentDto  ' ;
>  ; <
>  < =
(  = >
result  > D
)  D E
;  E F
}!! 
return## 
new## 
List## 
<##  
AssignmentStudentDto## 0
>##0 1
(##1 2
)##2 3
;##3 4
}$$ 	
public&& 
async&& 
Task&& 
<&& 
List&& 
<&&  
AssignmentStudentDto&& 3
>&&3 4
>&&4 5
GetById&&6 =
(&&= >
int&&> A
id&&B D
)&&D E
{'' 	
var(( 
result(( 
=(( 
await(( 
context(( &
.((& '
AssignmentStudents((' 9
.)) 
Include)) $
())$ %
c))% &
=>))' )
c))* +
.))+ ,
StudentsDto)), 7
)))7 8
.** 
Include** $
(**$ %
c**% &
=>**' )
c*** +
.**+ ,
AssignmentDto**, 9
)**9 :
.++ 
Where++ "
(++" #
c++# $
=>++% '
c++( )
.++) *
	IdStudent++* 3
==++4 6
id++7 9
)++9 :
.,, 
ToListAsync,, (
(,,( )
),,) *
;,,* +
if.. 
(.. 
result.. 
... 
Any.. 
(.. 
).. 
).. 
{// 
return00 
mapper00 
.00 
Map00 !
<00! "
List00" &
<00& ' 
AssignmentStudentDto00' ;
>00; <
>00< =
(00= >
result00> D
)00D E
;00E F
}11 
return33 
new33 
List33 
<33  
AssignmentStudentDto33 0
>330 1
(331 2
)332 3
;333 4
}44 	
}55 
}66 ∑
Ü/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/Services/JwTAuthenticationService.cs
	namespace		 	
BPT		
 
.		 
Test		 
.		 
JVL		 
.		 
BackEnd		 
.		 
Services		 '
.		' (
Services		( 0
{

 
public 

class $
JwTAuthenticationService )
:* +%
IJwTAuthenticationService, E
{ 
private 
readonly 
IConfiguration '
configuration( 5
;5 6
public $
JwTAuthenticationService '
(' (
IConfiguration( 6
configuration7 D
)D E
{ 	
this 
. 
configuration 
=  
configuration! .
;. /
} 	
public 
string 
Authenticate "
(" #
string# )
username* 2
,2 3
string4 :
password; C
)C D
{ 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
username% -
)- .
||/ 1
string2 8
.8 9
IsNullOrEmpty9 F
(F G
passwordG O
)O P
||Q S
usernameT \
!=] _
$str` h
||i k
passwordl t
!=u w
$str	x É
)
É Ñ
{ 
return 
null 
; 
} 
var 
tokenHandler 
= 
new "#
JwtSecurityTokenHandler# :
(: ;
); <
;< =
var 
tokenKey 
= 
Encoding #
.# $
ASCII$ )
.) *
GetBytes* 2
(2 3
configuration3 @
[@ A
$strA J
]J K
)K L
;L M
var 
tokenDescriptor 
=  !
new" %#
SecurityTokenDescriptor& =
{ 
Subject 
= 
new 
ClaimsIdentity ,
(, -
new- 0
Claim1 6
[6 7
]7 8
{   
new!! 
Claim!! 
(!! 

ClaimTypes!! (
.!!( )
Name!!) -
,!!- .
username!!/ 7
)!!7 8
}"" 
)"" 
,"" 
Expires## 
=## 
DateTime## "
.##" #
UtcNow### )
.##) *
AddHours##* 2
(##2 3
$num##3 4
)##4 5
,##5 6
SigningCredentials$$ "
=$$# $
new$$% (
SigningCredentials$$) ;
($$; <
new$$< ? 
SymmetricSecurityKey$$@ T
($$T U
tokenKey$$U ]
)$$] ^
,$$^ _
SecurityAlgorithms$$` r
.$$r s 
HmacSha256Signature	$$s Ü
)
$$Ü á
}%% 
;%% 
var'' 
token'' 
='' 
tokenHandler'' $
.''$ %
CreateToken''% 0
(''0 1
tokenDescriptor''1 @
)''@ A
;''A B
return)) 
tokenHandler)) 
.))  

WriteToken))  *
())* +
token))+ 0
)))0 1
;))1 2
}++ 	
},, 
}-- π=
|/Users/josuevicenciolara/Projects/carpeta sin tiÃÅtulo/BPT.Test.JVL/BPT.Test.JVL.BackEnd.Services/Services/StudentService.cs
	namespace 	
BPT
 
. 
Test 
. 
JVL 
. 
BackEnd 
. 
Services '
.' (
Services( 0
{ 
public 

class 
StudentService 
:  !
IStudentService" 1
{ 
private 
readonly 
BPTDbContext %
context& -
;- .
private 
readonly 
IMapper  
mapper! '
;' (
public 
StudentService 
( 
BPTDbContext *
context+ 2
,2 3
IMapper4 ;
mapper< B
)B C
{ 	
this 
. 
context 
= 
context "
;" #
this 
. 
mapper 
= 
mapper  
;  !
} 	
public 
async 
Task 
< 
StudentsDto %
>% &
Create' -
(- .
StudentsDto. 9
student: A
)A B
{ 	
var 
result 
= 
await 
context &
.& '
Students' /
./ 0
Where0 5
(5 6
c6 7
=>8 :
c; <
.< =
	IdStudent= F
==G I
studentJ Q
.Q R
	IdStudentR [
)[ \
.\ ]
ToListAsync] h
(h i
)i j
;j k
if 
( 
! 
result 
. 
Any 
( 
) 
) 
{ 
var 
estudiantesDAO "
=# $
mapper% +
.+ ,
Map, /
</ 0
Students0 8
>8 9
(9 :
student: A
)A B
;B C
await 
context 
. 
AddAsync &
(& '
estudiantesDAO' 5
)5 6
;6 7
await 
context 
. 
SaveChangesAsync .
(. /
)/ 0
;0 1
return   
student   
;   
}!! 
return## 
mapper## 
.## 
Map## 
<## 
StudentsDto## )
>##) *
(##* +
result##+ 1
.##1 2
First##2 7
(##7 8
)##8 9
)##9 :
;##: ;
}$$ 	
public&& 
async&& 
Task&& 
<&& 
StudentsDto&& %
>&&% &
GetStudentById&&' 5
(&&5 6
int&&6 9
id&&: <
)&&< =
{'' 	
var(( 
result(( 
=(( 
await(( 
context(( &
.((& '
Students((' /
.((/ 0
Where((0 5
(((5 6
c((6 7
=>((8 :
c((; <
.((< =
	IdStudent((= F
==((G I
id((J L
)((L M
.((M N
ToListAsync((N Y
(((Y Z
)((Z [
;(([ \
if)) 
()) 
result)) 
.)) 
Any)) 
()) 
))) 
))) 
{** 
return++ 
mapper++ 
.++ 
Map++ !
<++! "
StudentsDto++" -
>++- .
(++. /
result++/ 5
.++5 6
First++6 ;
(++; <
)++< =
)++= >
;++> ?
},, 
return.. 
new.. 
StudentsDto.. "
(.." #
)..# $
;..$ %
}// 	
public11 
async11 
Task11 
<11 
List11 
<11 
StudentsDto11 *
>11* +
>11+ ,
GetStudents11- 8
(118 9
)119 :
{22 	
var33 
result33 
=33 
await33 
context33 &
.33& '
Students33' /
.33/ 0
ToListAsync330 ;
(33; <
)33< =
;33= >
if44 
(44 
result44 
.44 
Any44 
(44 
)44 
)44 
{55 
return66 
mapper66 
.66 
Map66 !
<66! "
List66" &
<66& '
StudentsDto66' 2
>662 3
>663 4
(664 5
result665 ;
)66; <
;66< =
}77 
return99 
new99 
List99 
<99 
StudentsDto99 '
>99' (
(99( )
)99) *
;99* +
}:: 	
public<< 
async<< 
Task<< 
<<< 
bool<< 
><< 
Remove<<  &
(<<& '
int<<' *
Id<<+ -
)<<- .
{== 	
bool>> 
flag>> 
=>> 
false>> 
;>> 
var?? 
result?? 
=?? 
await?? 
context?? &
.??& '
Students??' /
.??/ 0
Where??0 5
(??5 6
c??6 7
=>??8 :
c??; <
.??< =
	IdStudent??= F
==??G I
Id??J L
)??L M
.??M N
ToListAsync??N Y
(??Y Z
)??Z [
;??[ \
if@@ 
(@@ 
result@@ 
.@@ 
Any@@ 
(@@ 
)@@ 
)@@ 
{AA 
contextBB 
.BB 
RemoveBB 
(BB 
resultBB %
.BB% &
FirstBB& +
(BB+ ,
)BB, -
)BB- .
;BB. /
awaitCC 
contextCC 
.CC 
SaveChangesAsyncCC .
(CC. /
)CC/ 0
;CC0 1
returnDD 
flagDD 
=DD 
trueDD "
;DD" #
}EE 
returnGG 
flagGG 
;GG 
}HH 	
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
boolJJ 
>JJ 
UpdateJJ  &
(JJ& '
intJJ' *
idJJ+ -
,JJ- .
StudentsDtoJJ/ :
studentJJ; B
)JJB C
{KK 	
boolLL 
flagLL 
=LL 
falseLL 
;LL 
varMM 
resultMM 
=MM 
awaitMM 
contextMM &
.MM& '
StudentsMM' /
.MM/ 0
WhereMM0 5
(MM5 6
cMM6 7
=>MM8 :
cMM; <
.MM< =
	IdStudentMM= F
==MMG I
idMMJ L
)MML M
.MMM N
ToListAsyncMMN Y
(MMY Z
)MMZ [
;MM[ \
ifNN 
(NN 
resultNN 
.NN 
AnyNN 
(NN 
)NN 
)NN 
{OO 
resultPP 
.PP 
FirstPP 
(PP 
)PP 
.PP 
NamePP #
=PP$ %
studentPP& -
.PP- .
NamePP. 2
;PP2 3
resultQQ 
.QQ 
FirstQQ 
(QQ 
)QQ 
.QQ 
	BirthDateQQ (
=QQ) *
studentQQ+ 2
.QQ2 3
	BirthDateQQ3 <
;QQ< =
awaitRR 
contextRR 
.RR 
SaveChangesAsyncRR .
(RR. /
)RR/ 0
;RR0 1
returnSS 
flagSS 
=SS 
trueSS "
;SS" #
}TT 
returnVV 
flagVV 
;VV 
}WW 	
}XX 
}YY 